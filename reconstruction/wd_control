#!/bin/bash

work_dir="work_dir"

#----------------------------------------------------------------------------------------------------

function PrintUsage()
{
	echo "USAGE: wd_control <command>"
	echo "COMMANDS"
	echo "    -h, --help	        print this help and exit"
	echo "    pf, print-finished    print finished directories"
	echo "    ps, print-success     print success directories"
	echo "    pc, print-crashed     print crashed directories"
	echo "    cf, clean-finished    delete finished directories"
	echo "    cs, clean-success     delete success directories"
	echo "    rc, resubmit-crashed  resubmit the jobs which crashed"
}

#----------------------------------------------------------------------------------------------------

# parse command line
comm=""

while [ -n "$1" ]
do
	if [ -n "$comm" ]
	then
		echo "ERROR: only one command can be given at a time"
		PrintUsage
		exit 1
	fi

	case "$1" in
		"-h" | "--help")
			PrintUsage
			exit 0
			;;

        "pf" | "print-finished")
            comm="print-finished"
            ;;
         
        "ps" | "print-success")
            comm="print-success"
            ;;
         
        "pc" | "print-crashed")
            comm="print-crashed"
            ;;
         
        "cf" | "clean-finished")
            comm="clean-finished"
            ;;
         
        "cs" | "clean-success")
            comm="clean-success"
            ;;
         
        "rc" | "resubmit-crashed")
            comm="resubmit-crashed"
            ;;
         
        *)
			echo "ERROR: command '$1 not understood."
			PrintUsage
            exit 1
	esac

	shift
done

# command given?
if [ -z "$comm" ]
then
	echo "ERROR: no command given"
	PrintUsage
	exit 1
fi

# process all directory entries
find "$work_dir" -type d|while read entry
do
	# skip non-directory entries
	if [ ! -d "$entry" ]
	then
		continue
	fi

	# skip non-final directoris
	if [ ! -f "$entry/job" ]
	then
		continue
	fi

	# print commands
	if [ "$comm" == "print-finished" ]
	then 
		if [ -f "$entry/finished" ]
		then
			echo $entry
		fi
	fi

	if [ "$comm" == "print-success" ]
	then 
		if [ -f "$entry/success" ]
		then
			echo $entry
		fi
	fi

	if [ "$comm" == "print-crashed" ]
	then 
		if [ -f "$entry/finished" -a ! -f "$entry/success" ]
		then
			echo $entry
		fi
	fi

	# clean commands
	if [ "$comm" == "clean-finished" ]
	then 
		if [ -f "$entry/finished" ]
		then
			echo "deleting: $entry"
			rm -rf "$entry"
		fi
	fi

	if [ "$comm" == "clean-success" ]
	then 
		if [ -f "$entry/success" ]
		then
			echo "deleting: $entry"
			rm -rf "$entry"
		fi
	fi

	# resubmit commands
	if [ "$comm" == "resubmit-crashed" ]
	then 
		if [ -f "$entry/finished" -a ! -f "$entry/success" ]
		then
			echo "resubmitting: $entry"

			cwd=`pwd -P`
			result=`bsub -q 8nh -o /dev/null -e /dev/null "$cwd/$entry/job"`
			echo "    $result"
			echo "$result" > "$entry/resubmitted"
		fi
	fi
	
done
